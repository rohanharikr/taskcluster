#import "../../../fragments/artifacts.graphql"

query Task($taskId: ID!, $artifactsConnection: PageConnection, $dependentsConnection: PageConnection, $taskActionsFilter: JSON) {
  task(taskId: $taskId) {
    taskId
    taskGroupId
    retries
    created
    deadline
    expires
    priority
    provisionerId
    workerType
    schedulerId
    tags
    requires
    scopes
    routes
    payload
    extra

    metadata {
      name
      description
      owner
      source
    }

    status {
      state
      retriesLeft
      runs {
        taskId
        runId
        state
        reasonCreated
        reasonResolved
        scheduled
        started
        resolved
        workerGroup
        workerId
        takenUntil

        artifacts(connection: $artifactsConnection) {
          ...Artifacts
        }
      }
    }

    taskActions(filter: $taskActionsFilter) {
      actions
      variables
      version
    }

    decisionTask {
      scopes
    }
  }

  dependentTasks(taskId: $taskId) {
    taskId
    status {
      state
    }
    metadata {
      name
    }
  }

  dependents(taskId: $taskId, connection: $dependentsConnection) {
    pageInfo {
      hasNextPage
      hasPreviousPage
      cursor
      previousCursor
      nextCursor
    }

    edges {
      node {
        taskId
        status {
          state
        }
        metadata {
          name
        }
      }
    }
  }
}
